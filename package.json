{
  "name": "multi-project",
  "displayName": "Multi Project",
  "description": "Multi Project",
  "publisher": "choiseunghyeon",
  "repository": {
    "type": "git",
    "url": "https://github.com/choiseunghyeon/vscode-multi-project"
  },
  "version": "0.1.1",
  "engines": {
    "vscode": "^1.62.0"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "manager",
    "bookmark",
    "multi",
    "project",
    "folder",
    "workspace"
  ],
  "activationEvents": [
    "*"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "multiProject-explorer",
          "title": "Multi Project Explorer",
          "icon": "$(multiple-windows)"
        }
      ]
    },
    "views": {
      "multiProject-explorer": [
        {
          "id": "multiProjectExplorer",
          "name": "Multi Project Explorer",
          "icon": "media/dep.svg",
          "contextualTitle": "Multi Project Explorer"
        },
        {
          "id": "bookmarkExplorer",
          "name": "Bookmark Explorer",
          "icon": "media/dep.svg",
          "contextualTitle": "Bookmark Explorer"
        }
      ]
    },
    "commands": [
      {
        "command": "multiProjectExplorer.refreshProjectExplorerEntry",
        "title": "Project Explorer Refresh",
        "icon": "$(debug-restart)"
      },
      {
        "command": "multiProjectExplorer.editProject",
        "title": "Edit Project",
        "icon": "$(notebook-open-as-text)"
      },
      {
        "command": "multiProjectExplorer.renameProject",
        "title": "Rename Project"
      },
      {
        "command": "multiProjectExplorer.openFile",
        "title": "Open File"
      },
      {
        "command": "bookmarkExplorer.refreshBookmarkExplorerEntry",
        "title": "Bookmark Explorer Refresh",
        "icon": "$(debug-restart)"
      },
      {
        "command": "bookmarkExplorer.editBookmark",
        "title": "Edit Bookmark",
        "icon": "$(notebook-open-as-text)"
      },
      {
        "command": "bookmarkExplorer.openFile",
        "title": "Open File"
      },
      {
        "command": "multiProjectExplorer.openFolder",
        "title": "Open Folder",
        "icon": "$(sign-out)"
      },
      {
        "command": "multiProjectExplorer.addProject",
        "title": "Add Project",
        "icon": "$(settings-add)"
      },
      {
        "command": "multiProjectExplorer.removeProject",
        "title": "Remove Project",
        "icon": "$(settings-add)"
      },
      {
        "command": "multiProjectExplorer.openTerminal",
        "title": "Open Terminal",
        "icon": "$(settings-add)"
      },
      {
        "command": "multiProjectExplorer.openProject",
        "title": "Open Project",
        "category": "Multi Project",
        "icon": "$(settings-add)"
      },
      {
        "command": "bookmarkExplorer.addBookmark",
        "title": "Add Bookmark",
        "icon": "$(debug-restart)"
      },
      {
        "command": "bookmarkExplorer.removeBookmark",
        "title": "Remove Bookmark",
        "icon": "$(debug-restart)"
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "command": "multiProjectExplorer.addProject",
          "when": "explorerResourceIsFolder"
        },
        {
          "command": "bookmarkExplorer.addBookmark",
          "when": "!explorerResourceIsFolder"
        }
      ],
      "view/title": [
        {
          "command": "multiProjectExplorer.refreshProjectExplorerEntry",
          "when": "view == multiProjectExplorer",
          "group": "navigation"
        },
        {
          "command": "multiProjectExplorer.editProject",
          "when": "view == multiProjectExplorer",
          "group": "navigation"
        },
        {
          "command": "bookmarkExplorer.refreshBookmarkExplorerEntry",
          "when": "view == bookmarkExplorer",
          "group": "navigation"
        },
        {
          "command": "bookmarkExplorer.editBookmark",
          "when": "view == bookmarkExplorer",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "multiProjectExplorer.openFolder",
          "when": "view == multiProjectExplorer && viewItem == project",
          "group": "inline"
        },
        {
          "command": "multiProjectExplorer.openTerminal",
          "when": "view == multiProjectExplorer && viewItem == project"
        },
        {
          "command": "multiProjectExplorer.renameProject",
          "when": "view == multiProjectExplorer && viewItem == project"
        },
        {
          "command": "multiProjectExplorer.removeProject",
          "when": "view == multiProjectExplorer && viewItem == project"
        },
        {
          "command": "multiProjectExplorer.addProject",
          "when": "view == multiProjectExplorer && viewItem == projectChild"
        },
        {
          "command": "bookmarkExplorer.addBookmark",
          "when": "view == multiProjectExplorer && viewItem == file"
        },
        {
          "command": "bookmarkExplorer.removeBookmark",
          "when": "view == bookmarkExplorer"
        }
      ]
    },
    "configuration": [
      {
        "title": "Multi Project",
        "properties": {
          "multiProject.fileName": {
            "type": "string",
            "default": "*",
            "description": "Project will display files that include fileName (* means all file name)"
          },
          "multiProject.ignoredFolders": {
            "type": "array",
            "default": [
              "node_modules",
              ".git"
            ],
            "items": {
              "type": "string"
            },
            "description": "Project will display own folders except ignore folders"
          },
          "multiProject.projectStorageLocation": {
            "type": "string",
            "default": "",
            "description": "setting projects.json absolute path / extension will display projects from projects.json / ex) c:\\multi-project\\projectFolder"
          },
          "multiProject.bookmarkStorageLocation": {
            "type": "string",
            "default": "",
            "description": "setting bookmarks.json absolute path / extension will display bookmarks from bookmark.json / ex) c:\\multi-project\\bookmarkFolder"
          }
        }
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js",
    "publish": "vsce publish"
  },
  "devDependencies": {
    "@types/chai": "^4.3.0",
    "@types/glob": "^7.1.4",
    "@types/lodash": "^4.14.178",
    "@types/mkdirp": "^1.0.2",
    "@types/mocha": "^9.0.0",
    "@types/node": "14.x",
    "@types/rimraf": "^3.0.2",
    "@types/vscode": "^1.62.0",
    "@typescript-eslint/eslint-plugin": "^5.1.0",
    "@typescript-eslint/parser": "^5.1.0",
    "@vscode/test-electron": "^1.6.2",
    "chai": "^4.3.4",
    "eslint": "^8.1.0",
    "expect": "^27.4.6",
    "glob": "^7.1.7",
    "mocha": "^9.1.3",
    "typescript": "^4.4.4"
  },
  "dependencies": {
    "jest-mock": "^27.4.6",
    "lodash": "^4.17.21",
    "mkdirp": "^1.0.4",
    "rimraf": "^3.0.2"
  }
}
